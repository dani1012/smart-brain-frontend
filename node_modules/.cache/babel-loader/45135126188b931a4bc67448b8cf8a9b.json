{"ast":null,"code":"var _jsxFileName = \"/Users/NickChen/Desktop/Front-end/facerecognitionbrain/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nconst app = new Clarifai.App({\n  apiKey: 'e1477ca77afc434d9c60d04f78a73adc'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 50,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = response => {\n      const clarifaiFace = response.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      console.log(width, height, clarifaiFace);\n      return {\n        topRow: clarifaiFace.top_row * height,\n        leftCol: clarifaiFace.left_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height,\n        rightCol: width - clarifaiFace.right_col * width\n      };\n    };\n\n    this.displayFaceBox = data => {\n      console.log(data);\n      this.setState({\n        box: data\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      }); //update input\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      }); //update imageUrl from input\n\n      app.models.predict(\"a403429f2ddf4b49b307e318f00e528b\", this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: this.state.box,\n      imageUrl: this.state.imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/NickChen/Desktop/Front-end/facerecognitionbrain/src/App.js"],"names":["React","Clarifai","FaceRecognition","Navigation","Logo","ImageLinkForm","Rank","Particles","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","Component","constructor","calculateFaceLocation","response","clarifaiFace","outputs","data","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","console","log","topRow","top_row","leftCol","left_col","bottomRow","bottom_row","rightCol","right_col","displayFaceBox","setState","box","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","then","catch","err","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\n\nconst app = new Clarifai.App({\n apiKey: 'e1477ca77afc434d9c60d04f78a73adc'\n});\n\n\nconst particlesOptions ={\n     particles: {\n        number: { \n              value: 50, \n              density: { \n                enable: true, \n                value_area: 800\n            }\n        }\n    }\n}\n\n\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    }\n  }\n   \n   calculateFaceLocation = (response) => {\n      const clarifaiFace = response.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n        console.log(width,height,clarifaiFace);\n      return {\n\n      \n        topRow: clarifaiFace.top_row * height, \n        leftCol: clarifaiFace.left_col * width,\n        bottomRow: height - (clarifaiFace.bottom_row * height),\n        rightCol: width - (clarifaiFace.right_col * width)\n\n        }\n\n  }\n\n  displayFaceBox = (data) =>{\n     console.log(data);\n       this.setState({box: data})\n\n  }\n\n\n  onInputChange = (event)=> {\n    this.setState({input : event.target.value}); //update input\n  }\n\n\n  onButtonSubmit = () =>{\n    this.setState({imageUrl : this.state.input}); //update imageUrl from input\n\n    app.models\n      .predict(\n       \"a403429f2ddf4b49b307e318f00e528b\",\n       this.state.input)\n      .then(response=>this.displayFaceBox(this.calculateFaceLocation(response)))\n      .catch(err=>console.log(err)); \n  }\n\n\n\n\trender () {\n  return (\n    <div className=\"App\">\n     <Particles className =\"particles\"\n        params={particlesOptions}\n        />     \n      <Navigation/>\n      <Logo/>\n      <Rank/>\n      <ImageLinkForm \n      onInputChange={this.onInputChange}\n      onButtonSubmit={this.onButtonSubmit}/>\n      <FaceRecognition box = {this.state.box} \n                      imageUrl={this.state.imageUrl}/>  \n    </div>\n   );\n  } \n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}